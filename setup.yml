---
- name: Setup mirror host
  hosts: mirror
  become: yes
  gather_facts: no

  vars_files:
    - vault.yml

  tasks:
    - setup:
      delegate_to: localhost
      delegate_facts: yes

    - name: Include RHEL specific vm variables
      include_vars: rhel_vm.yml

    # Skip provisioning if bastion == mirror
    - include_role:
        name: vmware_provision
      when: hostvars['localhost'].ansible_default_ipv4.address != hostvars[groups['mirror'][0]].ansible_host

    - name: Gather facts for first time
      setup:

    - name: Running role
      include_role:
        name: "{{ outer_item }}"
      loop:
        - yum-repo
        - yum-conf
        - pip-repo
        - common
        - apache    
        - registry
      loop_control:
        loop_var: outer_item

- name: Setup bastion host
  hosts: bastion
  become: yes

  vars:
    podman_tls_verify: false

  vars_files:
      - vault.yml

  tasks:
    - name: Running role
      include_role:
        name: "{{ outer_item }} "
      loop:
        - yum-conf
        - common
      loop_control:
        loop_var: outer_item

    # - role: haproxy
    #   when: setup_haproxy

    # - role: named
    #   when: setup_named
      
    - name: Install more packages for bastion
      yum:
        name: "{{item}}"
        state: latest
      loop:
        - podman
        - skopeo
        - genisoimage

    - set_fact: 
        auth_file_content: 
          auths: '{ "{{ registry_server }}": {"auth": "{{ password_string | b64encode }}"} }' 
      vars:
        password_string: "{{registry_username + ':' + registry_password }}"

    - name: "Save credentials to {{podman_auth_file}}"
      copy:
        content: "{{auth_file_content | to_nice_json}}"
        dest: "{{podman_auth_file}}"
      
    - name: Podman login to registry
      command: podman login --authfile {{podman_auth_file}} {{registry_server}} --tls-verify={{podman_tls_verify}}
      
- name: Provision vms for LB check
  hosts: bootstrap_grp, masters_grp, infra_routers_grp
  become: yes
  gather_facts: no

  vars_files:
    - vault.yml

  vars:
    additional_https_ports: 
      - 6443
      - 22623

  tasks:
    - name: Include VMware variables
      include_vars: rhel_vmware.yml
      when: vcenter_hostname | default()

    - include_role:
        name: vmware_provision
      when: vcenter_hostname | default()

    - name: Include RHV variables
      include_vars: rhel_rhv.yml
      when: rhv_hostname | default()

    - include_role:
        name: rhv_provision
      when: rhv_hostname | default()

    - name: Gather facts for first time
      setup:

    - name: Running role
      include_role:
        name: "{{ outer_item }}"
      loop:        
        - yum-conf
        - common
        - apache    
      loop_control:
        loop_var: outer_item

    - name: Test http/https port
      uri:
        url: "{% if item == 80 %}http{% else %}https{% endif %}://{{ inventory_hostname + '.' + dns_domain }}:{{item}}"
        validate_certs: no
      loop: "{{ [80,443] + additional_https_ports }}"
      loop_control:
        label: "{{ inventory_hostname + '.' + dns_domain }}:{{item}}"
      delegate_to: localhost
      
