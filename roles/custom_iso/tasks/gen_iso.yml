---
- name: "{{outer_item}} | Set fact"
  set_fact:
    iso_file: "{{iso_output_dir}}/{{outer_item}}.iso"
  
- name: "{{outer_item}} | Create iso directory"
  file:
    path: "{{iso_output_dir}}"
    state: directory

- name: "{{outer_item}} | Modify boot entry"
  template:
    src: isolinux.cfg.j2
    dest: "{{host_iso_build_path}}/isolinux/isolinux.cfg" 
  vars:
    vm_ip: "{{hostvars[outer_item].ansible_host}}"
    vm_name: "{{outer_item}}"
    ignition_file: "{{hostvars[outer_item].ignition_file}}"

# https://shanna-chan.blog/2019/07/26/openshift4-vsphere-static-ip/
- name: "{{outer_item}} | Create new RHCOS ISO "
  command: "mkisofs {{mkisofs_opts}}"
  args:
    chdir: "{{host_iso_build_path}}"
  vars:
    output_iso_path: "{{iso_file}}"
    name: "{{outer_item}}"      
  register: output

- name: "{{outer_item}} | Get ISO size"
  stat:
    path: "{{iso_file}}"
  register: size

- name: Upload ISO to datastore
  vsphere_copy:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    src: "{{iso_file}}"
    datacenter: "{{iso_datacenter}}"
    datastore: "{{iso_datastore}}"
    dest: "{{iso_datastore_path}}"
  when: vcenter_hostname | default()

- name: Upload ISO to datastore  
  ovirt_disk:
    auth:
      username: "{{ rhv_username }}"
      password: "{{ rhv_password }}"
      url: "https://{{ rhv_hostname }}/ovirt-engine/api"
      insecure: "{{rhv_insecure_cert}}"
    name: "{{ outer_item }}.iso"
    upload_image_path: "{{iso_file}}"
    storage_domain: "{{iso_datastore}}"  
    size: "{{ (size.stat.size / 1048576) | round(0, 'ceil') | int}}MiB"
    wait: true
    bootable: true
    format: raw
    content_type: iso
  when: rhv_hostname | default()

# - debug:
#     var: output

  # - name: Upload ISO to VMware datastore
  #   vsphere_copy:
  #     hostname: '{{ vcenter_hostname }}'
  #     username: '{{ vcenter_username }}'
  #     password: '{{ vcenter_password }}'
  #     src: "{{iso_file}}"
  #     datacenter: "{{vm_iso_datacenter}}"
  #     datastore: "{{vm_iso_datastore}}"
  #     path: "{{ iso_remote_path }}"  