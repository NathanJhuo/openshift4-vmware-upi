---
# tasks file for vmware_provision
- name: Construct disk var
  set_fact:
    disks: "{{ disks | default([]) + [{'size_gb': item.size, 'type': vm_disk_type, 'datastore': vm_datastore}] }}"
  loop: "{{ vm_disks }}"
    
- name: Create a virtual machine
  vmware_guest:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: "{{ not vcenter_insecure_ssl }}"
    folder: "{{ vm_folder }}"
    name: "{{ inventory_hostname + '.' + dns_domain }}"
    state: "{{ vm_state }}"
    datacenter: "{{ vm_datacenter }}"
    cluster: "{{ vm_cluster }}"
    guest_id: "{{ vm_guest_id }}"
    template: "{{ vm_template | default(omit) }}"
    disk: "{{ disks }}"
    cdrom: "{{ cdrom_iso | default(omit) }}"
    hardware:
      memory_mb: "{{ vm_memory_mb }}"
      memory_limit: "{{ vm_memory_mb }}"
      num_cpus: "{{ vm_cpu }}"
      num_cpu_cores_per_socket: "{{ vm_cpu }}"
      hotadd_cpu: True
      hotremove_cpu: True
      hotadd_memory: True
      vm_hardware_version: "{{ vm_hardware_version }}" 
    networks:
      - name: "{{ vm_network }}"
        ip: "{{ ansible_host }}"
        netmask: "{{ vm_netmask }}"
        gateway: "{{ vm_gateway }}"        
        type: static
        start_connected: yes
    customization: "{{ vm_customization }}"
    customvalues:
      - key: 'disk.EnableUUID'
        value: 'TRUE'        
  delegate_to: localhost
  register: deploy
  
