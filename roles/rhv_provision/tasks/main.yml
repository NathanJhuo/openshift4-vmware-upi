---
- block:
  - name: Authenticate to oVirt
    ovirt_auth:
      username: "{{ rhv_username }}"
      password: "{{ rhv_password }}"
      url: "https://{{ rhv_hostname }}/ovirt-engine/api"
      insecure: True

  - name: Create virtual machine
    ovirt_vm:
      auth: "{{ ovirt_auth }}"
      state: stopped
      delete_protected: False
      name: "{{ inventory_hostname + '.' + dns_domain}}"
      template: "{{ rhel_vm_template | default(omit) }}"
      cluster: "{{ vm_cluster }}"
      type: server
      memory: "{{ vm_memory_mb }}MiB"
      memory_max: "{{ vm_memory_mb }}MiB"
      memory_guaranteed: 1024MiB
      cpu_sockets: 1
      cpu_cores: "{{ vm_cpu }}"
      ballooning_enabled: yes
      boot_devices:
        - hd
        - network
      placement_policy: user_migratable     
      operating_system: "{{ vm_guest_id }}"
      graphical_console:
        protocol:
          - vnc
    register: ovirt_vm_results

  - name: Add Disks to VMs
    ovirt_disk:
      auth: "{{ ovirt_auth }}"
      name: "{{ inventory_hostname + '_' + my_idx | string  }}"
      bootable: yes
      vm_name: "{{ inventory_hostname }}"
      size: "{{ item.size }}"
      format: cow
      interface: virtio_scsi
      storage_domain: "{{ vm_datastore }}"
      activate: true
      poll_interval: 5
      sparse: yes
    loop: "{{ vm_disks }}"
    loop_control:
      index_var: my_idx
    when: rhel_vm_template is not defined | default()

  - name: Add NICs to VMs
    ovirt_nic:
      auth: "{{ ovirt_auth }}"
      name: "{{ vm_interface_name }}"
      interface: virtio
      network: "{{ vm_network }}"
      profile: "{{ vm_network }}"
      vm: "{{ inventory_hostname }}"

  - set_fact:
      custom_script: |
        ssh_pwauth: True
        disable_root: False
        runcmd:
        - ["touch", "/etc/cloud/cloud-init.disabled"]     
    when: vm_guest_id == 'rhel_7x64'

  - name: Power on VM
    ovirt_vm:
      auth: "{{ ovirt_auth }}"
      state: running
      name: "{{ inventory_hostname }}"
      cloud_init:
          host_name: "{{ hostname }}"
          nic_boot_protocol: static
          nic_ip_address: "{{ ansible_host }}"
          nic_netmask: "{{ vm_netmask }}"
          nic_gateway: "{{ vm_gateway }} "
          dns_servers: "{{ ' '.join(vm_dns) }}"
          dns_search: "{{ dns_domain }}"
          nic_name: eth0
          nic_on_boot: true
          custom_script: "{{ custom_script | default(omit) }}"

  - name: Debug ovirt_vm_results
    debug:
      var: ovirt_vm_results
      verbosity: 2

  - name: Revoke the SSO token
    ovirt_auth:
      state: absent
      ovirt_auth: "{{ ovirt_auth }}"

  delegate_to: localhost

- wait_for_connection:
    delay: 10
    timeout: 300

