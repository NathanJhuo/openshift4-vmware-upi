---
- name: Destroy all OCP vms 
  hosts: ocp
  become: yes
  gather_facts: no

  vars_files:
    - vault.yml
    - vars/rhel_vmware.yml

  tasks:
    - name: "List of all ocp vms in {{vm_folder}}"
      debug:
        var: groups['ocp'] | list | sort
      delegate_to: localhost
      run_once: true

    - pause:
        prompt: "This will destory all OCP vms in {{vm_folder}}. (ctrl+c to abort. Any key to continue)?"

    - name: Get vm info
      vmware_vm_info:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: "{{ not vcenter_insecure_ssl }}"
        folder: "{{ vm_folder }}"
        vm_type: vm
      register: vm_info
      delegate_to: localhost
      
    - name: Set json query fact
      set_fact:
        query: "[?guest_name=='{{ inventory_hostname }}.{{ dns_domain }}']"

    - block:
      - name: Power off vm
        vmware_guest_powerstate:
          hostname: "{{ vcenter_hostname }}"
          username: "{{ vcenter_username }}"
          password: "{{ vcenter_password }}"
          validate_certs: "{{ not vcenter_insecure_ssl }}"
          folder: "{{ vm_folder }}"
          name: "{{ inventory_hostname }}.{{ dns_domain }}"
          state: powered-off
      
      - name: Destroy vm
        vmware_guest:
          hostname: "{{ vcenter_hostname }}"
          username: "{{ vcenter_username }}"
          password: "{{ vcenter_password }}"
          validate_certs: "{{ not vcenter_insecure_ssl }}"
          folder: "{{ vm_folder }}"
          name: "{{ inventory_hostname + '.' + dns_domain }}"
          state: absent
      
      delegate_to: localhost
      when: vm_info.virtual_machines | json_query(query)